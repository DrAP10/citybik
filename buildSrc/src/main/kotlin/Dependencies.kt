object Dependencies {

    const val dataModule = ":data"
    const val datasourceModule = ":datasource"
    const val domainModule = ":domain"
    const val presentationModule = ":presentation"
    const val usecasesModule = ":usecases"

    const val koinVersion = "3.4.0"
    const val coreKtxVersion = "1.10.1"
    const val lifecycleVersion = "2.6.1"
    const val activityComposeVersion = "1.7.2"
    const val coroutinesVersion = "1.7.1"
    const val retrofitVersion = "2.9.0"
    const val gsonVersion = "2.10.1"
    const val chuckerVersion = "4.0.0"
    const val roomVersion = "2.5.1"
    const val appCompatVersion = "1.4.1"
    const val materialVersion = "1.5.0"
    const val composeVersion = "1.4.3"
    const val accompanistVersion = "0.30.1"
    const val coilComposeVersion = "2.4.0"
    const val legacySupportVersion = "1.0.0"

    const val junitVersion = "4.13.2"
    const val androidTestJunitVersion = "1.1.5"
    const val androidTestEspressoVersion = "3.5.1"


    const val koinAndroid = "io.insert-koin:koin-android:$koinVersion"
    const val koinCore = "io.insert-koin:koin-core:$koinVersion"
    const val koinCompose = "io.insert-koin:koin-androidx-compose:$koinVersion"
    const val coreKtx = "androidx.core:core-ktx:$coreKtxVersion"
    const val lifecycleRuntime = "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycleVersion"
    const val activityCompose = "androidx.activity:activity-compose:$activityComposeVersion"
    const val coroutinesCore = "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"
    const val coroutinesAndroid = "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"
    const val retrofit2 = "com.squareup.retrofit2:retrofit:$retrofitVersion"
    const val gson = "com.google.code.gson:gson:$gsonVersion"
    const val converterGson = "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    const val chuckerInterceptor = "com.github.chuckerteam.chucker:library:$chuckerVersion"
    const val chuckerInterceptorNoOperation = "com.github.chuckerteam.chucker:library-no-op:$chuckerVersion"
    const val room = "androidx.room:room-runtime:$roomVersion"
    const val roomCompiler = "androidx.room:room-compiler:$roomVersion"
    const val roomKotlin = "androidx.room:room-ktx:$roomVersion"
    const val appCompat = "androidx.appcompat:appcompat:$appCompatVersion"
    const val material = "com.google.android.material:material:$materialVersion"
    const val accompanist = "com.google.accompanist:accompanist-systemuicontroller:$accompanistVersion"
    const val composeUi = "androidx.compose.ui:ui:$composeVersion"
    const val composeUiToolingPreview = "androidx.compose.ui:ui-tooling-preview:$composeVersion"
    const val composeRuntime = "androidx.compose.runtime:runtime:$composeVersion"
    const val composeLiveData = "androidx.compose.runtime:runtime-livedata:$composeVersion"
    const val materialCompose = "androidx.compose.material:material:$composeVersion"
    const val coilCompose = "io.coil-kt:coil-compose:$coilComposeVersion"
    const val legacySupport = "androidx.legacy:legacy-support-v4:$legacySupportVersion"
    const val liveData = "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleVersion"
    const val viewModel = "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion"
    const val composeUiTooling = "androidx.compose.ui:ui-tooling:$composeVersion"
    const val composeUiTestManifest = "androidx.compose.ui:ui-test-manifest:$composeVersion"

    const val junit = "junit:junit:$junitVersion"
    const val androidTestJunit = "androidx.test.ext:junit:$androidTestJunitVersion"
    const val androidTestEspresso = "androidx.test.espresso:espresso-core:$androidTestEspressoVersion"
    const val composeJunit = "androidx.compose.ui:ui-test-junit4:$composeVersion"


}
